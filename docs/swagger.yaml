definitions:
  dto.ListResponse:
    properties:
      currentPage:
        type: integer
      itemPerPage:
        type: integer
      totalItems:
        type: integer
      totalPages:
        type: integer
    type: object
  dto.Response:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      message:
        type: string
      metadata:
        $ref: '#/definitions/dto.ListResponse'
      success:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /api/v1/base:
    get:
      consumes:
      - application/json
      description: Get all exists books.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Response'
            type: array
      summary: get all exists base
      tags:
      - Base
    post:
      consumes:
      - application/json
      description: Create a new base.
      parameters:
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Age
        in: body
        name: age
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            type: string
      summary: create a new base
      tags:
      - Base
  /api/v1/base/{id}:
    get:
      consumes:
      - application/json
      description: Get base by given ID.
      parameters:
      - description: Base ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Response'
      summary: get base by given ID
      tags:
      - Base
  /v1/base:
    delete:
      consumes:
      - application/json
      description: Delete base by given ID.
      parameters:
      - description: Base ID
        in: body
        name: id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: delete base by given ID
      tags:
      - Base
    put:
      consumes:
      - application/json
      description: Update base.
      parameters:
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Age
        in: body
        name: age
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: update base
      tags:
      - Base
swagger: "2.0"
